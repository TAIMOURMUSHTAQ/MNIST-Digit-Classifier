# -*- coding: utf-8 -*-
"""MNIST Handwritten Digit Recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PZ7fOkIuS5rqLF2wkrBc5hs1AFi5UZl4
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier
from tensorflow.keras.datasets import mnist  

(X_train, y_train), (X_test, y_test) = mnist.load_data()
#data visulaziation
plt.figure(figsize=(10,4))
for i in range(10):
    plt.subplot(2,5,i+1)
    plt.imshow(X_train[i], cmap='gray')
    plt.title(f"Label: {y_train[i]}")
    plt.axis("off")
plt.tight_layout()
plt.show()

# images to features
X_train_flat = X_train.reshape(-1, 28*28)
X_test_flat = X_test.reshape(-1, 28*28)

#Normalizing
X_train_flat = X_train_flat / 255.0
X_test_flat = X_test_flat / 255.0

model = RandomForestClassifier(n_estimators=100)
model.fit(X_train_flat, y_train)

y_pred = model.predict(X_test_flat)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

index = 0  #testing different digits
plt.imshow(X_test[index], cmap='gray')
plt.title(f"Actual: {y_test[index]} | Predicted: {model.predict([X_test_flat[index]])[0]}")
plt.axis('off')
plt.show()

#deployment puposes
import joblib
joblib.dump(model, "mnist_digit_classifier.pkl")

